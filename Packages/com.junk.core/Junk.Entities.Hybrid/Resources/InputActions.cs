//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.0
//     from Packages/com.junk.core/Junk.Entities.Hybrid/Resources/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""InterfaceOld"",
            ""id"": ""f9ab310c-4a17-4407-918e-8b648aec9d05"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""c960d2b5-36a8-48b0-8d49-774f6cb4a968"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""3d067f41-8503-4ba6-a19d-07c781bf1c1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""0218f691-6048-4e75-8ddb-61031754de10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6b5318c1-12e1-49ad-8c2a-a40ceb30fc06"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1ca58716-0d7f-4e86-8183-f4d6c79299ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dbcde46a-7ad5-486c-a86d-9396c3aee255"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""81a6040c-a08c-43d1-8098-b9e126703536"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b667b955-921f-455b-a77b-8f4cc45e6c1d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""99a45210-a558-4765-b136-01a88d28e91c"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6c967d49-52ad-4b76-a27e-4ab7f30e4170"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceSelect"",
                    ""type"": ""PassThrough"",
                    ""id"": ""66e88cef-7511-4bba-99cc-4c734a3faea3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""809f371f-c5e2-4e7a-83a1-d867598f40dd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""14a5d6e8-4aaf-4119-a9ef-34b8c2c548bf"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9144cbe6-05e1-4687-a6d7-24f99d23dd81"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2db08d65-c5fb-421b-983f-c71163608d67"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""58748904-2ea9-4a80-8579-b500e6a76df8"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ba04515-75aa-45de-966d-393d9bbd1c14"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""712e721c-bdfb-4b23-a86c-a0d9fcfea921"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcd248ae-a788-4676-a12e-f4d81205600b"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1f04d9bc-c50b-41a1-bfcc-afb75475ec20"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fb8277d4-c5cd-4663-9dc7-ee3f0b506d90"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""e25d9774-381c-4a61-b47c-7b6b299ad9f9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3db53b26-6601-41be-9887-63ac74e79d19"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0cb3e13e-3d90-4178-8ae6-d9c5501d653f"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0392d399-f6dd-4c82-8062-c1e9c0d34835"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""942a66d9-d42f-43d6-8d70-ecb4ba5363bc"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""ff527021-f211-4c02-933e-5976594c46ed"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""563fbfdd-0f09-408d-aa75-8642c4f08ef0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""eb480147-c587-4a33-85ed-eb0ab9942c43"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2bf42165-60bc-42ca-8072-8c13ab40239b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""85d264ad-e0a0-4565-b7ff-1a37edde51ac"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""74214943-c580-44e4-98eb-ad7eebe17902"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cea9b045-a000-445b-95b8-0c171af70a3b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8607c725-d935-4808-84b1-8354e29bab63"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4cda81dc-9edd-4e03-9d7c-a71a14345d0b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9e92bb26-7e3b-4ec4-b06b-3c8f8e498ddc"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82627dcc-3b13-4ba9-841d-e4b746d6553e"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c52c8e0b-8179-41d3-b8a1-d149033bbe86"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5693e57a-238a-46ed-b5ae-e64e6e574302"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4faf7dc9-b979-4210-aa8c-e808e1ef89f5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d66d5ba-88d7-48e6-b1cd-198bbfef7ace"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47c2a644-3ebc-4dae-a106-589b7ca75b59"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38c99815-14ea-4617-8627-164d27641299"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24066f69-da47-44f3-a07e-0015fb02eb2e"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c191405-5738-4d4b-a523-c6a301dbf754"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7236c0d9-6ca3-47cf-a6ee-a97f5b59ea77"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23e01e3a-f935-4948-8d8b-9bcac77714fb"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""932fe797-a0a9-4eef-bd2d-556b362e08d0"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ControllerLook"",
            ""id"": ""33a58fa9-0707-48a5-a2ce-3af00db1a493"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""5b33077a-0694-4c82-9a74-d132e1379db5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d6b21c02-7a55-4f5c-beec-a6edf147b2be"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=40,y=40)"",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4fae2ee-c71d-4f2a-9bae-e90f3c346850"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse;Touch"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17d355fe-2b06-411f-b0d8-17ff40907018"",
                    ""path"": ""<Joystick>/{Hatswitch}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5371a75d-4097-449a-bce5-bd4aff5b4928"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=40,y=40)"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ControllerMovement"",
            ""id"": ""58e8bbe6-fc95-422c-97ce-9075de633ad0"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e44750bb-0490-410b-bda8-82ec6f60ebfc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""42124993-1266-40f9-8f94-b55e338e8234"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpReleased"",
                    ""type"": ""Button"",
                    ""id"": ""21191d8b-d897-4476-a38b-2b378775583b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""ad28dbf0-9477-4bd8-98f1-d1c6ccb32d44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""2096ad0b-084e-46fe-b8b3-e6d531d168d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""4f2713fc-5d85-4224-8e2b-cedd5d177385"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""4d2c798f-24c1-4561-909c-163e67244290"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimDownSights"",
                    ""type"": ""Button"",
                    ""id"": ""89504d6b-2493-4646-8870-f50f064b9228"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon1"",
                    ""type"": ""Button"",
                    ""id"": ""f95fb51d-88ff-4aaa-85f8-e917efaaefe1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon2"",
                    ""type"": ""Button"",
                    ""id"": ""c82ba2e9-ba29-4c06-88cc-093503aac1cb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon3"",
                    ""type"": ""Button"",
                    ""id"": ""e777c20b-33df-4033-8f9e-ff59e1df8951"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon4"",
                    ""type"": ""Button"",
                    ""id"": ""8e8dd5fd-f526-48f6-b814-892c81a60e87"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""fd198ef2-eb2a-4292-b486-7ddbd52ed7c8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""be88f6b2-d0fb-4208-93ac-1c4b2fba3e0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Holster"",
                    ""type"": ""Button"",
                    ""id"": ""5ee872dd-1ac7-4ff9-9b0c-ffb0280fcaef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e3f2770e-4ecb-4ca8-80cb-f95f58bcd61d"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""978bfe49-cc26-4a3d-ab7b-7d7a29327403"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""00ca640b-d935-4593-8157-c05846ea39b3"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2062cb9-1b15-46a2-838c-2f8d72a0bdd9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8180e8bd-4097-4f4e-ab88-4523101a6ce9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""320bffee-a40b-4347-ac70-c210eb8bc73a"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1c5327b5-f71c-4f60-99c7-4e737386f1d1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2581a9b-1d11-4566-b27d-b92aff5fabbc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2e46982e-44cc-431b-9f0b-c11910bf467a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcfe95b8-67b9-4526-84b5-5d0bc98d6400"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77bff152-3580-4b21-b6de-dcd0c7e41164"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1635d3fe-58b6-4ba9-a4e2-f4b964f6b5c8"",
                    ""path"": ""<XRController>/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ea4d645-4504-4529-b061-ab81934c3752"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""143bb1cd-cc10-4eca-a2f0-a3664166fe91"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05f6913d-c316-48b2-a6bb-e225f14c7960"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""886e731e-7071-4ae4-95c0-e61739dad6fd"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Touch"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee3d0cd2-254e-47a7-a8cb-bc94d9658c54"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8255d333-5683-4943-a58a-ccb207ff1dce"",
                    ""path"": ""<XRController>/{PrimaryAction}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5c91b18-b05e-4e6b-ada8-f20501c24478"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""AimDownSights"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93513a3b-fefa-44cb-9e8c-0a0192667a25"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""AimDownSights"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84455824-b5d4-480f-9b4d-a59b729af212"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58beb246-12e9-48b2-a459-14a3b4af57b6"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d28ccd3-e802-48fd-a74d-9f5afa23e77d"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4517c48-09f3-4e8f-8386-37ca5b3e18ce"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab39ab5f-c551-4d84-888e-124fcb3a92c6"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""180ef872-2af5-4b6e-88c7-5e2a23b380a6"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96fbd22c-ee71-4f21-8fd1-2bce9cb5d7ed"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ce3c8c0-9c62-4387-80c5-e46913232c44"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50424495-074d-41a4-920d-2b217a7f0fe4"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcaa91af-e2f4-4b8b-b20c-c72fb3dcc433"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38c5041c-e78f-43c2-8d1f-7c406da7ad40"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b6eadf9-2e6a-4400-85c2-a100ae9eb107"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2ed9f19-5669-482b-8bd8-e818ce46bd1d"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Weapon3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba1c79e5-37e3-4ada-8fea-2a82130fa304"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Weapon3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23528b71-6f78-49fd-8c90-d23a41468c88"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Weapon4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0603ce5f-01f0-414e-a88b-92bbd8daf302"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Weapon4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1d0dbd0-c83d-45f7-8ffd-44da56be5471"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""DropWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2678426-11cb-469f-baf6-96b3556ad4e8"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DropWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""929f96b5-2c62-4bb9-b323-39f960606d0a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""JumpReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8301b227-5f88-4471-a656-49eceadb428f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf73e459-e05d-4b39-ae7c-553b43f3c342"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91627395-1bdc-4a67-9580-dab94f3e46ce"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Holster"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Interface"",
            ""id"": ""4847dd22-b757-4895-9b59-4370605cc698"",
            ""actions"": [
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""1b05b307-c80c-4bb3-af01-7b5284ba2841"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""a511eeff-d4a9-4054-b3cd-ae2185ef1a7c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitGame"",
                    ""type"": ""Button"",
                    ""id"": ""1fce70fa-eaa7-4986-972f-0da0e1f90a8d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6e8b767a-5c4c-4724-bd02-ca414ad7551b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d041388c-487d-4493-933e-bdf795c57ea8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2984c537-6f82-4b01-86de-d1c27a781fb3"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a59d173-9287-46e9-b702-c9b78485ee84"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81e66246-b8da-4774-a8c6-1652deb8a039"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""QuitGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""WorldBuilder"",
            ""id"": ""220471d8-15b2-4105-ba5a-2d3ed7cbc6b0"",
            ""actions"": [
                {
                    ""name"": ""Clear Selection"",
                    ""type"": ""Button"",
                    ""id"": ""0608cb1d-9c69-4814-a1c8-9863ff996151"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Change Selection"",
                    ""type"": ""Button"",
                    ""id"": ""dd93617c-1ea8-420b-b78c-4e387eb9b488"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnyKey"",
                    ""type"": ""Button"",
                    ""id"": ""eb50fbea-56ea-407d-aebf-1cc20b3a4f54"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VertexSelection"",
                    ""type"": ""Button"",
                    ""id"": ""4fca450f-57b3-4645-8370-4b676c501e02"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EdgeSelection"",
                    ""type"": ""Button"",
                    ""id"": ""69668474-5577-42c2-a1bf-25f6e0c5347e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FaceSelection"",
                    ""type"": ""Button"",
                    ""id"": ""59c7f35c-0236-4ce2-a47d-6dc2a9f6eb97"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ObjectSelection"",
                    ""type"": ""Button"",
                    ""id"": ""e149d31a-11ec-4956-9b6f-15ce9d459a8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MultipleObjectsSelection"",
                    ""type"": ""Button"",
                    ""id"": ""69811afc-4239-475a-9af8-8253f9b28cbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""3309d008-0396-42db-805e-c408d89025a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftClickHold"",
                    ""type"": ""Button"",
                    ""id"": ""439e72ff-3628-4bb4-9730-e4e2928ff4a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""15096171-9f93-4eff-a0e7-cb65264e3002"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerDelta"",
                    ""type"": ""Value"",
                    ""id"": ""96a03052-7480-45bb-883a-057ea8f4f02a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveFace"",
                    ""type"": ""Button"",
                    ""id"": ""67066377-7b53-492a-80e9-bae25d9650e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2e992362-f593-4fc6-91b1-4aa908890cb5"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eaa33d06-a0b5-4bbe-9f57-b7d00360a057"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AnyKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68b0e49d-cbb7-4b18-864c-0064f8963ed0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Clear Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55e8f057-95e7-4bed-9488-ba11f9b0f915"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Clear Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9825992e-4983-41ae-a745-4bfe3aa097e1"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""VertexSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58c5eedc-2e88-41f0-b6e6-8f5b36b0a6b7"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EdgeSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57a4b532-784e-4289-b600-3971174eada3"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FaceSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c88e9ff2-6a11-40ee-a694-25a3e2458be0"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ObjectSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bbba810-0f01-4cc6-a741-e1ec77c34b30"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MultipleObjectsSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d3e7157-e650-4870-8799-de4045dc8104"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9121a93-561a-4afa-9f74-93eaddc0220d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold(duration=0.05)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClickHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""582c77ac-45aa-42e8-b424-43af9b5f3069"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""619575ba-8f46-4902-b26a-a13026ce1929"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""005dfbcb-e58b-4f38-91c0-c8adde4abdc6"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9672021a-e7f0-497d-baac-fa177124a053"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveFace"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // InterfaceOld
        m_InterfaceOld = asset.FindActionMap("InterfaceOld", throwIfNotFound: true);
        m_InterfaceOld_Navigate = m_InterfaceOld.FindAction("Navigate", throwIfNotFound: true);
        m_InterfaceOld_Submit = m_InterfaceOld.FindAction("Submit", throwIfNotFound: true);
        m_InterfaceOld_Cancel = m_InterfaceOld.FindAction("Cancel", throwIfNotFound: true);
        m_InterfaceOld_Point = m_InterfaceOld.FindAction("Point", throwIfNotFound: true);
        m_InterfaceOld_Click = m_InterfaceOld.FindAction("Click", throwIfNotFound: true);
        m_InterfaceOld_ScrollWheel = m_InterfaceOld.FindAction("ScrollWheel", throwIfNotFound: true);
        m_InterfaceOld_MiddleClick = m_InterfaceOld.FindAction("MiddleClick", throwIfNotFound: true);
        m_InterfaceOld_RightClick = m_InterfaceOld.FindAction("RightClick", throwIfNotFound: true);
        m_InterfaceOld_TrackedDevicePosition = m_InterfaceOld.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_InterfaceOld_TrackedDeviceOrientation = m_InterfaceOld.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        m_InterfaceOld_TrackedDeviceSelect = m_InterfaceOld.FindAction("TrackedDeviceSelect", throwIfNotFound: true);
        // ControllerLook
        m_ControllerLook = asset.FindActionMap("ControllerLook", throwIfNotFound: true);
        m_ControllerLook_Look = m_ControllerLook.FindAction("Look", throwIfNotFound: true);
        // ControllerMovement
        m_ControllerMovement = asset.FindActionMap("ControllerMovement", throwIfNotFound: true);
        m_ControllerMovement_Move = m_ControllerMovement.FindAction("Move", throwIfNotFound: true);
        m_ControllerMovement_Jump = m_ControllerMovement.FindAction("Jump", throwIfNotFound: true);
        m_ControllerMovement_JumpReleased = m_ControllerMovement.FindAction("JumpReleased", throwIfNotFound: true);
        m_ControllerMovement_Run = m_ControllerMovement.FindAction("Run", throwIfNotFound: true);
        m_ControllerMovement_Crouch = m_ControllerMovement.FindAction("Crouch", throwIfNotFound: true);
        m_ControllerMovement_Interact = m_ControllerMovement.FindAction("Interact", throwIfNotFound: true);
        m_ControllerMovement_Fire = m_ControllerMovement.FindAction("Fire", throwIfNotFound: true);
        m_ControllerMovement_AimDownSights = m_ControllerMovement.FindAction("AimDownSights", throwIfNotFound: true);
        m_ControllerMovement_Weapon1 = m_ControllerMovement.FindAction("Weapon1", throwIfNotFound: true);
        m_ControllerMovement_Weapon2 = m_ControllerMovement.FindAction("Weapon2", throwIfNotFound: true);
        m_ControllerMovement_Weapon3 = m_ControllerMovement.FindAction("Weapon3", throwIfNotFound: true);
        m_ControllerMovement_Weapon4 = m_ControllerMovement.FindAction("Weapon4", throwIfNotFound: true);
        m_ControllerMovement_DropWeapon = m_ControllerMovement.FindAction("DropWeapon", throwIfNotFound: true);
        m_ControllerMovement_Reload = m_ControllerMovement.FindAction("Reload", throwIfNotFound: true);
        m_ControllerMovement_Holster = m_ControllerMovement.FindAction("Holster", throwIfNotFound: true);
        // Interface
        m_Interface = asset.FindActionMap("Interface", throwIfNotFound: true);
        m_Interface_Escape = m_Interface.FindAction("Escape", throwIfNotFound: true);
        m_Interface_AnyKey = m_Interface.FindAction("AnyKey", throwIfNotFound: true);
        m_Interface_QuitGame = m_Interface.FindAction("QuitGame", throwIfNotFound: true);
        // WorldBuilder
        m_WorldBuilder = asset.FindActionMap("WorldBuilder", throwIfNotFound: true);
        m_WorldBuilder_ClearSelection = m_WorldBuilder.FindAction("Clear Selection", throwIfNotFound: true);
        m_WorldBuilder_ChangeSelection = m_WorldBuilder.FindAction("Change Selection", throwIfNotFound: true);
        m_WorldBuilder_AnyKey = m_WorldBuilder.FindAction("AnyKey", throwIfNotFound: true);
        m_WorldBuilder_VertexSelection = m_WorldBuilder.FindAction("VertexSelection", throwIfNotFound: true);
        m_WorldBuilder_EdgeSelection = m_WorldBuilder.FindAction("EdgeSelection", throwIfNotFound: true);
        m_WorldBuilder_FaceSelection = m_WorldBuilder.FindAction("FaceSelection", throwIfNotFound: true);
        m_WorldBuilder_ObjectSelection = m_WorldBuilder.FindAction("ObjectSelection", throwIfNotFound: true);
        m_WorldBuilder_MultipleObjectsSelection = m_WorldBuilder.FindAction("MultipleObjectsSelection", throwIfNotFound: true);
        m_WorldBuilder_LeftClick = m_WorldBuilder.FindAction("LeftClick", throwIfNotFound: true);
        m_WorldBuilder_LeftClickHold = m_WorldBuilder.FindAction("LeftClickHold", throwIfNotFound: true);
        m_WorldBuilder_PointerPosition = m_WorldBuilder.FindAction("PointerPosition", throwIfNotFound: true);
        m_WorldBuilder_PointerDelta = m_WorldBuilder.FindAction("PointerDelta", throwIfNotFound: true);
        m_WorldBuilder_MoveFace = m_WorldBuilder.FindAction("MoveFace", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        Debug.Assert(!m_InterfaceOld.enabled, "This will cause a leak and performance issues, InputActions.InterfaceOld.Disable() has not been called.");
        Debug.Assert(!m_ControllerLook.enabled, "This will cause a leak and performance issues, InputActions.ControllerLook.Disable() has not been called.");
        Debug.Assert(!m_ControllerMovement.enabled, "This will cause a leak and performance issues, InputActions.ControllerMovement.Disable() has not been called.");
        Debug.Assert(!m_Interface.enabled, "This will cause a leak and performance issues, InputActions.Interface.Disable() has not been called.");
        Debug.Assert(!m_WorldBuilder.enabled, "This will cause a leak and performance issues, InputActions.WorldBuilder.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InterfaceOld
    private readonly InputActionMap m_InterfaceOld;
    private List<IInterfaceOldActions> m_InterfaceOldActionsCallbackInterfaces = new List<IInterfaceOldActions>();
    private readonly InputAction m_InterfaceOld_Navigate;
    private readonly InputAction m_InterfaceOld_Submit;
    private readonly InputAction m_InterfaceOld_Cancel;
    private readonly InputAction m_InterfaceOld_Point;
    private readonly InputAction m_InterfaceOld_Click;
    private readonly InputAction m_InterfaceOld_ScrollWheel;
    private readonly InputAction m_InterfaceOld_MiddleClick;
    private readonly InputAction m_InterfaceOld_RightClick;
    private readonly InputAction m_InterfaceOld_TrackedDevicePosition;
    private readonly InputAction m_InterfaceOld_TrackedDeviceOrientation;
    private readonly InputAction m_InterfaceOld_TrackedDeviceSelect;
    public struct InterfaceOldActions
    {
        private @InputActions m_Wrapper;
        public InterfaceOldActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_InterfaceOld_Navigate;
        public InputAction @Submit => m_Wrapper.m_InterfaceOld_Submit;
        public InputAction @Cancel => m_Wrapper.m_InterfaceOld_Cancel;
        public InputAction @Point => m_Wrapper.m_InterfaceOld_Point;
        public InputAction @Click => m_Wrapper.m_InterfaceOld_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_InterfaceOld_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_InterfaceOld_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_InterfaceOld_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_InterfaceOld_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_InterfaceOld_TrackedDeviceOrientation;
        public InputAction @TrackedDeviceSelect => m_Wrapper.m_InterfaceOld_TrackedDeviceSelect;
        public InputActionMap Get() { return m_Wrapper.m_InterfaceOld; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InterfaceOldActions set) { return set.Get(); }
        public void AddCallbacks(IInterfaceOldActions instance)
        {
            if (instance == null || m_Wrapper.m_InterfaceOldActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InterfaceOldActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceSelect.started += instance.OnTrackedDeviceSelect;
            @TrackedDeviceSelect.performed += instance.OnTrackedDeviceSelect;
            @TrackedDeviceSelect.canceled += instance.OnTrackedDeviceSelect;
        }

        private void UnregisterCallbacks(IInterfaceOldActions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @TrackedDevicePosition.started -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled -= instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceSelect.started -= instance.OnTrackedDeviceSelect;
            @TrackedDeviceSelect.performed -= instance.OnTrackedDeviceSelect;
            @TrackedDeviceSelect.canceled -= instance.OnTrackedDeviceSelect;
        }

        public void RemoveCallbacks(IInterfaceOldActions instance)
        {
            if (m_Wrapper.m_InterfaceOldActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInterfaceOldActions instance)
        {
            foreach (var item in m_Wrapper.m_InterfaceOldActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InterfaceOldActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InterfaceOldActions @InterfaceOld => new InterfaceOldActions(this);

    // ControllerLook
    private readonly InputActionMap m_ControllerLook;
    private List<IControllerLookActions> m_ControllerLookActionsCallbackInterfaces = new List<IControllerLookActions>();
    private readonly InputAction m_ControllerLook_Look;
    public struct ControllerLookActions
    {
        private @InputActions m_Wrapper;
        public ControllerLookActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_ControllerLook_Look;
        public InputActionMap Get() { return m_Wrapper.m_ControllerLook; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllerLookActions set) { return set.Get(); }
        public void AddCallbacks(IControllerLookActions instance)
        {
            if (instance == null || m_Wrapper.m_ControllerLookActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControllerLookActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
        }

        private void UnregisterCallbacks(IControllerLookActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
        }

        public void RemoveCallbacks(IControllerLookActions instance)
        {
            if (m_Wrapper.m_ControllerLookActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IControllerLookActions instance)
        {
            foreach (var item in m_Wrapper.m_ControllerLookActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControllerLookActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ControllerLookActions @ControllerLook => new ControllerLookActions(this);

    // ControllerMovement
    private readonly InputActionMap m_ControllerMovement;
    private List<IControllerMovementActions> m_ControllerMovementActionsCallbackInterfaces = new List<IControllerMovementActions>();
    private readonly InputAction m_ControllerMovement_Move;
    private readonly InputAction m_ControllerMovement_Jump;
    private readonly InputAction m_ControllerMovement_JumpReleased;
    private readonly InputAction m_ControllerMovement_Run;
    private readonly InputAction m_ControllerMovement_Crouch;
    private readonly InputAction m_ControllerMovement_Interact;
    private readonly InputAction m_ControllerMovement_Fire;
    private readonly InputAction m_ControllerMovement_AimDownSights;
    private readonly InputAction m_ControllerMovement_Weapon1;
    private readonly InputAction m_ControllerMovement_Weapon2;
    private readonly InputAction m_ControllerMovement_Weapon3;
    private readonly InputAction m_ControllerMovement_Weapon4;
    private readonly InputAction m_ControllerMovement_DropWeapon;
    private readonly InputAction m_ControllerMovement_Reload;
    private readonly InputAction m_ControllerMovement_Holster;
    public struct ControllerMovementActions
    {
        private @InputActions m_Wrapper;
        public ControllerMovementActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_ControllerMovement_Move;
        public InputAction @Jump => m_Wrapper.m_ControllerMovement_Jump;
        public InputAction @JumpReleased => m_Wrapper.m_ControllerMovement_JumpReleased;
        public InputAction @Run => m_Wrapper.m_ControllerMovement_Run;
        public InputAction @Crouch => m_Wrapper.m_ControllerMovement_Crouch;
        public InputAction @Interact => m_Wrapper.m_ControllerMovement_Interact;
        public InputAction @Fire => m_Wrapper.m_ControllerMovement_Fire;
        public InputAction @AimDownSights => m_Wrapper.m_ControllerMovement_AimDownSights;
        public InputAction @Weapon1 => m_Wrapper.m_ControllerMovement_Weapon1;
        public InputAction @Weapon2 => m_Wrapper.m_ControllerMovement_Weapon2;
        public InputAction @Weapon3 => m_Wrapper.m_ControllerMovement_Weapon3;
        public InputAction @Weapon4 => m_Wrapper.m_ControllerMovement_Weapon4;
        public InputAction @DropWeapon => m_Wrapper.m_ControllerMovement_DropWeapon;
        public InputAction @Reload => m_Wrapper.m_ControllerMovement_Reload;
        public InputAction @Holster => m_Wrapper.m_ControllerMovement_Holster;
        public InputActionMap Get() { return m_Wrapper.m_ControllerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllerMovementActions set) { return set.Get(); }
        public void AddCallbacks(IControllerMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_ControllerMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControllerMovementActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @JumpReleased.started += instance.OnJumpReleased;
            @JumpReleased.performed += instance.OnJumpReleased;
            @JumpReleased.canceled += instance.OnJumpReleased;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @AimDownSights.started += instance.OnAimDownSights;
            @AimDownSights.performed += instance.OnAimDownSights;
            @AimDownSights.canceled += instance.OnAimDownSights;
            @Weapon1.started += instance.OnWeapon1;
            @Weapon1.performed += instance.OnWeapon1;
            @Weapon1.canceled += instance.OnWeapon1;
            @Weapon2.started += instance.OnWeapon2;
            @Weapon2.performed += instance.OnWeapon2;
            @Weapon2.canceled += instance.OnWeapon2;
            @Weapon3.started += instance.OnWeapon3;
            @Weapon3.performed += instance.OnWeapon3;
            @Weapon3.canceled += instance.OnWeapon3;
            @Weapon4.started += instance.OnWeapon4;
            @Weapon4.performed += instance.OnWeapon4;
            @Weapon4.canceled += instance.OnWeapon4;
            @DropWeapon.started += instance.OnDropWeapon;
            @DropWeapon.performed += instance.OnDropWeapon;
            @DropWeapon.canceled += instance.OnDropWeapon;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @Holster.started += instance.OnHolster;
            @Holster.performed += instance.OnHolster;
            @Holster.canceled += instance.OnHolster;
        }

        private void UnregisterCallbacks(IControllerMovementActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @JumpReleased.started -= instance.OnJumpReleased;
            @JumpReleased.performed -= instance.OnJumpReleased;
            @JumpReleased.canceled -= instance.OnJumpReleased;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @AimDownSights.started -= instance.OnAimDownSights;
            @AimDownSights.performed -= instance.OnAimDownSights;
            @AimDownSights.canceled -= instance.OnAimDownSights;
            @Weapon1.started -= instance.OnWeapon1;
            @Weapon1.performed -= instance.OnWeapon1;
            @Weapon1.canceled -= instance.OnWeapon1;
            @Weapon2.started -= instance.OnWeapon2;
            @Weapon2.performed -= instance.OnWeapon2;
            @Weapon2.canceled -= instance.OnWeapon2;
            @Weapon3.started -= instance.OnWeapon3;
            @Weapon3.performed -= instance.OnWeapon3;
            @Weapon3.canceled -= instance.OnWeapon3;
            @Weapon4.started -= instance.OnWeapon4;
            @Weapon4.performed -= instance.OnWeapon4;
            @Weapon4.canceled -= instance.OnWeapon4;
            @DropWeapon.started -= instance.OnDropWeapon;
            @DropWeapon.performed -= instance.OnDropWeapon;
            @DropWeapon.canceled -= instance.OnDropWeapon;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @Holster.started -= instance.OnHolster;
            @Holster.performed -= instance.OnHolster;
            @Holster.canceled -= instance.OnHolster;
        }

        public void RemoveCallbacks(IControllerMovementActions instance)
        {
            if (m_Wrapper.m_ControllerMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IControllerMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_ControllerMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControllerMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ControllerMovementActions @ControllerMovement => new ControllerMovementActions(this);

    // Interface
    private readonly InputActionMap m_Interface;
    private List<IInterfaceActions> m_InterfaceActionsCallbackInterfaces = new List<IInterfaceActions>();
    private readonly InputAction m_Interface_Escape;
    private readonly InputAction m_Interface_AnyKey;
    private readonly InputAction m_Interface_QuitGame;
    public struct InterfaceActions
    {
        private @InputActions m_Wrapper;
        public InterfaceActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Escape => m_Wrapper.m_Interface_Escape;
        public InputAction @AnyKey => m_Wrapper.m_Interface_AnyKey;
        public InputAction @QuitGame => m_Wrapper.m_Interface_QuitGame;
        public InputActionMap Get() { return m_Wrapper.m_Interface; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InterfaceActions set) { return set.Get(); }
        public void AddCallbacks(IInterfaceActions instance)
        {
            if (instance == null || m_Wrapper.m_InterfaceActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InterfaceActionsCallbackInterfaces.Add(instance);
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
            @AnyKey.started += instance.OnAnyKey;
            @AnyKey.performed += instance.OnAnyKey;
            @AnyKey.canceled += instance.OnAnyKey;
            @QuitGame.started += instance.OnQuitGame;
            @QuitGame.performed += instance.OnQuitGame;
            @QuitGame.canceled += instance.OnQuitGame;
        }

        private void UnregisterCallbacks(IInterfaceActions instance)
        {
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
            @AnyKey.started -= instance.OnAnyKey;
            @AnyKey.performed -= instance.OnAnyKey;
            @AnyKey.canceled -= instance.OnAnyKey;
            @QuitGame.started -= instance.OnQuitGame;
            @QuitGame.performed -= instance.OnQuitGame;
            @QuitGame.canceled -= instance.OnQuitGame;
        }

        public void RemoveCallbacks(IInterfaceActions instance)
        {
            if (m_Wrapper.m_InterfaceActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInterfaceActions instance)
        {
            foreach (var item in m_Wrapper.m_InterfaceActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InterfaceActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InterfaceActions @Interface => new InterfaceActions(this);

    // WorldBuilder
    private readonly InputActionMap m_WorldBuilder;
    private List<IWorldBuilderActions> m_WorldBuilderActionsCallbackInterfaces = new List<IWorldBuilderActions>();
    private readonly InputAction m_WorldBuilder_ClearSelection;
    private readonly InputAction m_WorldBuilder_ChangeSelection;
    private readonly InputAction m_WorldBuilder_AnyKey;
    private readonly InputAction m_WorldBuilder_VertexSelection;
    private readonly InputAction m_WorldBuilder_EdgeSelection;
    private readonly InputAction m_WorldBuilder_FaceSelection;
    private readonly InputAction m_WorldBuilder_ObjectSelection;
    private readonly InputAction m_WorldBuilder_MultipleObjectsSelection;
    private readonly InputAction m_WorldBuilder_LeftClick;
    private readonly InputAction m_WorldBuilder_LeftClickHold;
    private readonly InputAction m_WorldBuilder_PointerPosition;
    private readonly InputAction m_WorldBuilder_PointerDelta;
    private readonly InputAction m_WorldBuilder_MoveFace;
    public struct WorldBuilderActions
    {
        private @InputActions m_Wrapper;
        public WorldBuilderActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ClearSelection => m_Wrapper.m_WorldBuilder_ClearSelection;
        public InputAction @ChangeSelection => m_Wrapper.m_WorldBuilder_ChangeSelection;
        public InputAction @AnyKey => m_Wrapper.m_WorldBuilder_AnyKey;
        public InputAction @VertexSelection => m_Wrapper.m_WorldBuilder_VertexSelection;
        public InputAction @EdgeSelection => m_Wrapper.m_WorldBuilder_EdgeSelection;
        public InputAction @FaceSelection => m_Wrapper.m_WorldBuilder_FaceSelection;
        public InputAction @ObjectSelection => m_Wrapper.m_WorldBuilder_ObjectSelection;
        public InputAction @MultipleObjectsSelection => m_Wrapper.m_WorldBuilder_MultipleObjectsSelection;
        public InputAction @LeftClick => m_Wrapper.m_WorldBuilder_LeftClick;
        public InputAction @LeftClickHold => m_Wrapper.m_WorldBuilder_LeftClickHold;
        public InputAction @PointerPosition => m_Wrapper.m_WorldBuilder_PointerPosition;
        public InputAction @PointerDelta => m_Wrapper.m_WorldBuilder_PointerDelta;
        public InputAction @MoveFace => m_Wrapper.m_WorldBuilder_MoveFace;
        public InputActionMap Get() { return m_Wrapper.m_WorldBuilder; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WorldBuilderActions set) { return set.Get(); }
        public void AddCallbacks(IWorldBuilderActions instance)
        {
            if (instance == null || m_Wrapper.m_WorldBuilderActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_WorldBuilderActionsCallbackInterfaces.Add(instance);
            @ClearSelection.started += instance.OnClearSelection;
            @ClearSelection.performed += instance.OnClearSelection;
            @ClearSelection.canceled += instance.OnClearSelection;
            @ChangeSelection.started += instance.OnChangeSelection;
            @ChangeSelection.performed += instance.OnChangeSelection;
            @ChangeSelection.canceled += instance.OnChangeSelection;
            @AnyKey.started += instance.OnAnyKey;
            @AnyKey.performed += instance.OnAnyKey;
            @AnyKey.canceled += instance.OnAnyKey;
            @VertexSelection.started += instance.OnVertexSelection;
            @VertexSelection.performed += instance.OnVertexSelection;
            @VertexSelection.canceled += instance.OnVertexSelection;
            @EdgeSelection.started += instance.OnEdgeSelection;
            @EdgeSelection.performed += instance.OnEdgeSelection;
            @EdgeSelection.canceled += instance.OnEdgeSelection;
            @FaceSelection.started += instance.OnFaceSelection;
            @FaceSelection.performed += instance.OnFaceSelection;
            @FaceSelection.canceled += instance.OnFaceSelection;
            @ObjectSelection.started += instance.OnObjectSelection;
            @ObjectSelection.performed += instance.OnObjectSelection;
            @ObjectSelection.canceled += instance.OnObjectSelection;
            @MultipleObjectsSelection.started += instance.OnMultipleObjectsSelection;
            @MultipleObjectsSelection.performed += instance.OnMultipleObjectsSelection;
            @MultipleObjectsSelection.canceled += instance.OnMultipleObjectsSelection;
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @LeftClickHold.started += instance.OnLeftClickHold;
            @LeftClickHold.performed += instance.OnLeftClickHold;
            @LeftClickHold.canceled += instance.OnLeftClickHold;
            @PointerPosition.started += instance.OnPointerPosition;
            @PointerPosition.performed += instance.OnPointerPosition;
            @PointerPosition.canceled += instance.OnPointerPosition;
            @PointerDelta.started += instance.OnPointerDelta;
            @PointerDelta.performed += instance.OnPointerDelta;
            @PointerDelta.canceled += instance.OnPointerDelta;
            @MoveFace.started += instance.OnMoveFace;
            @MoveFace.performed += instance.OnMoveFace;
            @MoveFace.canceled += instance.OnMoveFace;
        }

        private void UnregisterCallbacks(IWorldBuilderActions instance)
        {
            @ClearSelection.started -= instance.OnClearSelection;
            @ClearSelection.performed -= instance.OnClearSelection;
            @ClearSelection.canceled -= instance.OnClearSelection;
            @ChangeSelection.started -= instance.OnChangeSelection;
            @ChangeSelection.performed -= instance.OnChangeSelection;
            @ChangeSelection.canceled -= instance.OnChangeSelection;
            @AnyKey.started -= instance.OnAnyKey;
            @AnyKey.performed -= instance.OnAnyKey;
            @AnyKey.canceled -= instance.OnAnyKey;
            @VertexSelection.started -= instance.OnVertexSelection;
            @VertexSelection.performed -= instance.OnVertexSelection;
            @VertexSelection.canceled -= instance.OnVertexSelection;
            @EdgeSelection.started -= instance.OnEdgeSelection;
            @EdgeSelection.performed -= instance.OnEdgeSelection;
            @EdgeSelection.canceled -= instance.OnEdgeSelection;
            @FaceSelection.started -= instance.OnFaceSelection;
            @FaceSelection.performed -= instance.OnFaceSelection;
            @FaceSelection.canceled -= instance.OnFaceSelection;
            @ObjectSelection.started -= instance.OnObjectSelection;
            @ObjectSelection.performed -= instance.OnObjectSelection;
            @ObjectSelection.canceled -= instance.OnObjectSelection;
            @MultipleObjectsSelection.started -= instance.OnMultipleObjectsSelection;
            @MultipleObjectsSelection.performed -= instance.OnMultipleObjectsSelection;
            @MultipleObjectsSelection.canceled -= instance.OnMultipleObjectsSelection;
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @LeftClickHold.started -= instance.OnLeftClickHold;
            @LeftClickHold.performed -= instance.OnLeftClickHold;
            @LeftClickHold.canceled -= instance.OnLeftClickHold;
            @PointerPosition.started -= instance.OnPointerPosition;
            @PointerPosition.performed -= instance.OnPointerPosition;
            @PointerPosition.canceled -= instance.OnPointerPosition;
            @PointerDelta.started -= instance.OnPointerDelta;
            @PointerDelta.performed -= instance.OnPointerDelta;
            @PointerDelta.canceled -= instance.OnPointerDelta;
            @MoveFace.started -= instance.OnMoveFace;
            @MoveFace.performed -= instance.OnMoveFace;
            @MoveFace.canceled -= instance.OnMoveFace;
        }

        public void RemoveCallbacks(IWorldBuilderActions instance)
        {
            if (m_Wrapper.m_WorldBuilderActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IWorldBuilderActions instance)
        {
            foreach (var item in m_Wrapper.m_WorldBuilderActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_WorldBuilderActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public WorldBuilderActions @WorldBuilder => new WorldBuilderActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IInterfaceOldActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
        void OnTrackedDeviceSelect(InputAction.CallbackContext context);
    }
    public interface IControllerLookActions
    {
        void OnLook(InputAction.CallbackContext context);
    }
    public interface IControllerMovementActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnJumpReleased(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnAimDownSights(InputAction.CallbackContext context);
        void OnWeapon1(InputAction.CallbackContext context);
        void OnWeapon2(InputAction.CallbackContext context);
        void OnWeapon3(InputAction.CallbackContext context);
        void OnWeapon4(InputAction.CallbackContext context);
        void OnDropWeapon(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnHolster(InputAction.CallbackContext context);
    }
    public interface IInterfaceActions
    {
        void OnEscape(InputAction.CallbackContext context);
        void OnAnyKey(InputAction.CallbackContext context);
        void OnQuitGame(InputAction.CallbackContext context);
    }
    public interface IWorldBuilderActions
    {
        void OnClearSelection(InputAction.CallbackContext context);
        void OnChangeSelection(InputAction.CallbackContext context);
        void OnAnyKey(InputAction.CallbackContext context);
        void OnVertexSelection(InputAction.CallbackContext context);
        void OnEdgeSelection(InputAction.CallbackContext context);
        void OnFaceSelection(InputAction.CallbackContext context);
        void OnObjectSelection(InputAction.CallbackContext context);
        void OnMultipleObjectsSelection(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnLeftClickHold(InputAction.CallbackContext context);
        void OnPointerPosition(InputAction.CallbackContext context);
        void OnPointerDelta(InputAction.CallbackContext context);
        void OnMoveFace(InputAction.CallbackContext context);
    }
}
